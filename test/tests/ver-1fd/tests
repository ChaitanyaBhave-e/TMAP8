[Tests]
  design = 'HeatConduction.md HeatConductionTimeDerivative.md'
  verification = 'ver-1fd.md'
  issues = '#103'
  [ver-1fd]
    type = Exodiff
    input = ver-1fd.i
    exodiff = ver-1fd_out.e
    # cli_args = 'Executioner/dt=5 Mesh/nx=10 Outputs/file_base=ver-1a_test_out'
    requirement = 'The system shall be able to model convective heating.'
  []
  [ver-1fd_csv]
    type = CSVDiff
    input = ver-1fd.i
    csvdiff = ver-1fd_out.csv
    should_execute = False  # this test relies on the output files from ver-1fd, so it shouldn't be run twice
    requirement = 'The system shall be able to model convective heating to generate CSV data for use in comparisons with the analytic solution..'
  []
  # [ver-1a_heavy]
  #   type = Exodiff
  #   input = ver-1a.i
  #   exodiff = ver-1a_out.e
  #   requirement = 'The system shall be able to model species diffusion through a structure, originating from a depleting source enclosure, with the fine mesh and timestep required to match the analytical solution.'
  #   heavy = true
  # []
  # [ver-1a_heavy_csvdiff]
  #   type = CSVDiff
  #   input = ver-1a.i
  #   should_execute = False  # this test relies on the output files from ver-1a_heavy, so it shouldn't be run twice
  #   csvdiff = ver-1a_csv.csv
  #   requirement = 'The system shall be able to model species diffusion through a structure, originating from a depleting source enclosure, with the fine mesh and timestep required to match the analytical solution to generate CSV data for use in comparisons with the analytic solution.'
  #   heavy = true
  #   prereq = ver-1a_heavy
  # []
  [ver-1fd_comparison]
    type = RunCommand
    command = 'python3 comparison_ver-1fd.py'
    requirement = 'The system shall be able to generate comparison plots between the analytical solution and simulated solution of verification case 1fd, modeling convective heating.'
    # heavy = true
    # prereq = ver-1fd_heavy_csvdiff
    required_python_packages = 'matplotlib numpy pandas os git'
  []
[]
